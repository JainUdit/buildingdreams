{"version":3,"sources":["images/Background.jpg","images/architect.png","images/camera.png","containers/Style.ts","containers/Footer.tsx","containers/HowItWorksPopUp.tsx","containers/Header.tsx","containers/DesignAndPros.tsx","containers/Daytona.tsx","containers/HelloWorld.tsx","containers/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","StyledDaytona","styled","Grid","StyledHeader","background","StyledButton","Button","StyledFooter","StyledDesignAndPros","ArchitectImage","architect","DesignImage","design","StyledMenu","Menu","StyledMenuItem","MenuItem","Footer","container","item","wrap","justify","alignItems","className","HowItWorksPopUp","useState","open","setOpen","onClick","disableRipple","Dialog","onClose","DialogTitle","id","ListItem","Header","theme","useTheme","isXtraSmall","useMediaQuery","breakpoints","down","React","anchorEl","setAnchorEl","Boolean","handleClose","md","IconButton","event","currentTarget","keepMounted","TransitionComponent","Fade","direction","InputBase","placeholder","DesignAndPros","xs","Daytona","HelloWorld","children","App","path","component","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7a9e7c09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Background.90840909.jpg\";","module.exports = __webpack_public_path__ + \"static/media/architect.d20bc3e6.png\";","module.exports = __webpack_public_path__ + \"static/media/camera.86038b83.png\";","import styled from '@emotion/styled';\r\nimport { Grid, Button, Menu, MenuItem } from '@material-ui/core';\r\nimport background from '../images/Background.jpg';\r\nimport architect from '../images/architect.png';\r\nimport design from '../images/camera.png';\r\n\r\nexport const StyledDaytona = styled(Grid)`\r\n    height: 100%;\r\n    width: 100%;\r\n`\r\n\r\nexport const StyledHeader = styled('div')`\r\n    background-image: url(${background}); \r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-color: #F5F5F5;\r\n    position: relative;\r\n\r\n    width: 100%;\r\n    height: 500px;\r\n    font-size: 18px;\r\n    font-family: serif;\r\n\r\n    .marginLeftRight {\r\n        margin: 0px 10px;\r\n    }\r\n\r\n    .paddingRight20 {\r\n        padding-right: 20px;\r\n    }\r\n\r\n    .logo {\r\n        font-family: \"Lucida Console\", Monaco, monospace;\r\n        font-size: 20px;\r\n    }\r\n\r\n    .topFace {\r\n        height: 50px;\r\n        background-color: rgba(0,0,0, 0.2);\r\n    }\r\n\r\n    .midFace {\r\n        height: 400px;\r\n        text-align: center;\r\n        position: absolute;\r\n    }\r\n\r\n    .search {\r\n        position: relative;\r\n        border-radius: 15px;\r\n        background-color: rgba(0,0,0, 0.4);\r\n        color: #F5F5F5;\r\n        margin-left: 0;\r\n        width: 200px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .inputBase {\r\n        color: #F5F5F5;\r\n    }\r\n    .searchIcon {\r\n        padding: 10px;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nexport const StyledButton = styled(Button)`\r\n    text-transform: none !important;\r\n    font-family: serif !important;\r\n    font-size: 18px !important;\r\n    &:hover {\r\n        background-color: rgba(0,0,0,0) !important;\r\n    }\r\n`\r\n\r\nexport const StyledFooter = styled(Grid)`\r\n    background-color: #F5F5F5;\r\n    color: #333333;\r\n    height: 50px;\r\n    font-family: Georgia, serif;\r\n    font-size: 14px;\r\n\r\n    .companyName {\r\n        font-family: \"Lucida Console\", Monaco, monospace;\r\n        font-weight: 500;\r\n        padding-left: 10px;\r\n    }\r\n`\r\n\r\nexport const StyledDesignAndPros = styled(Grid)(`\r\n    width: 100%;\r\n    height: 200px;\r\n    background-color: #294F61;\r\n    font-size: 14px;\r\n    font-family: \"Lucida Console\"; \r\n\r\n    .pointer {\r\n        cursor: pointer;\r\n    }\r\n`);\r\n\r\nexport const ArchitectImage = styled(Grid)`\r\n    background-image: url(${architect}); \r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    position: relative;\r\n    border: 0px;\r\n    margin: 15px;\r\n    height:100px;\r\n    width: 100px;\r\n`\r\n\r\nexport const DesignImage = styled(Grid)`\r\n    background-image: url(${design}); \r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    position: relative;\r\n    border: 0px;\r\n    margin: 25px;\r\n    height: 80px;\r\n    width: 80px;\r\n`\r\n\r\nexport const StyledMenu = styled(Menu)(`\r\n\r\n    & .MuiList-root {\r\n        background-color: #294F61;\r\n    }\r\n\r\n    .marginLeftRight {\r\n        margin: 0px 10px;\r\n    }\r\n`)\r\n\r\nexport const StyledMenuItem = styled(MenuItem)(`\r\n\r\n    & .MuiButton-label {\r\n        font-size: 16px;\r\n    }\r\n    .fontFamily {\r\n        font-family: serif;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .marginLeftRight {\r\n        margin: 0px 10px;\r\n    }\r\n`)","import React from 'react';\r\nimport { StyledFooter } from './Style';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <StyledFooter container item wrap=\"nowrap\" justify=\"center\" alignItems=\"center\">\r\n            <span>Powered By</span>\r\n            <span className=\"companyName\">Thakarji.com</span>\r\n        </StyledFooter>\r\n    );\r\n}","import React, { ReactElement, useState } from \"react\";\r\nimport { Dialog, DialogTitle, ListItem } from \"@material-ui/core\";\r\nimport { StyledButton } from \"./Style\";\r\n\r\nexport const HowItWorksPopUp = (): ReactElement => {\r\n    const [open, setOpen] = useState<boolean>(false);\r\n\r\n    const handleButtonClick = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledButton onClick={handleButtonClick} disableRipple>How It Works</StyledButton>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle id=\"dialogTitle\">How It Works</DialogTitle>\r\n                <ListItem>1. Select the work to be done.</ListItem>\r\n                <ListItem>2. Search for matching professionals</ListItem>\r\n                <ListItem>3. Problem Solved </ListItem>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}","import React, { ReactElement } from 'react';\r\nimport { StyledHeader, StyledMenu, StyledMenuItem } from './Style';\r\nimport { Grid, InputBase, useMediaQuery, useTheme, IconButton, Fade } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { HowItWorksPopUp } from './HowItWorksPopUp';\r\n\r\nexport const Header = (): ReactElement => {\r\n    const theme = useTheme();\r\n    const isXtraSmall = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenuClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const menu = (): ReactElement => {\r\n        return (\r\n            <StyledMenu\r\n                id=\"fade-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <StyledMenuItem onClick={handleClose}><HowItWorksPopUp /></StyledMenuItem>\r\n                <StyledMenuItem onClick={handleClose}><span className=\"fontFamily marginLeftRight\">Join As Pro</span></StyledMenuItem>\r\n                <StyledMenuItem onClick={handleClose}><span className=\"fontFamily marginLeftRight\">Sign In</span></StyledMenuItem>\r\n            </StyledMenu>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <StyledHeader>\r\n            <Grid container item className=\"topFace\" wrap=\"nowrap\" justify=\"space-between\" alignItems=\"center\">\r\n                <Grid container item md={3} wrap=\"nowrap\" justify=\"flex-start\" alignItems=\"center\">\r\n                    <span className=\"logo marginLeftRight\">Thakarji</span>\r\n                </Grid>\r\n                {isXtraSmall\r\n                    ?\r\n                    <Grid container item md={9} wrap=\"nowrap\" justify=\"flex-end\" alignItems=\"center\">\r\n                        <IconButton className=\"marginLeftRight\" onClick={handleMenuClick}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        {menu()}\r\n                    </Grid>\r\n                    :\r\n                    <Grid container item md={9} wrap=\"nowrap\" justify=\"flex-end\" alignItems=\"center\">\r\n                        <Grid container item className=\"paddingRight20\" md={6} wrap=\"nowrap\" justify=\"space-between\" alignItems=\"center\">\r\n                            <HowItWorksPopUp />\r\n                            <span className=\"marginLeftRight\">Join As Pro</span>\r\n                            <span className=\"marginLeftRight\">Sign In</span>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n            <Grid container item direction=\"row\" className=\"midFace\" wrap=\"nowrap\" justify=\"center\" alignItems=\"center\">\r\n                <Grid container item direction=\"row\" className=\"search\" wrap=\"nowrap\">\r\n                    <div className=\"searchIcon\"><SearchIcon /></div>\r\n                    <InputBase placeholder=\"Search\" className=\"inputBase\" />\r\n                </Grid>\r\n            </Grid>\r\n        </StyledHeader>\r\n    );\r\n};","import React, { ReactElement } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { ArchitectImage, StyledDesignAndPros, DesignImage } from \"./Style\";\r\n\r\nexport const DesignAndPros = (): ReactElement => {\r\n    return (\r\n        <>\r\n            <StyledDesignAndPros container item wrap=\"nowrap\" justify=\"space-around\" alignItems=\"center\">\r\n                <Grid container direction=\"column\" xs={6} md={6} item wrap=\"nowrap\" justify=\"center\" alignItems=\"center\">\r\n                    <DesignImage className=\"pointer\"/>\r\n                    <span className=\"pointer\">Go for Design</span>\r\n                </Grid>\r\n                <Grid container direction=\"column\" xs={6} md={6} item wrap=\"nowrap\" justify=\"center\" alignItems=\"center\">\r\n                    <ArchitectImage className=\"pointer\"/>\r\n                    <span className=\"pointer\">Have a Look for Pro's</span>\r\n                </Grid>\r\n            </StyledDesignAndPros>\r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Footer } from './Footer';\r\nimport { StyledDaytona } from './Style';\r\nimport { Header } from './Header';\r\nimport { DesignAndPros } from './DesignAndPros';\r\n\r\nconst Daytona = () => {\r\n    return (\r\n        <StyledDaytona container item direction=\"column\" alignItems=\"center\" justify=\"space-between\">\r\n            <Header />\r\n            <DesignAndPros />\r\n            <Footer />\r\n        </StyledDaytona>\r\n    )\r\n}\r\n\r\nexport default Daytona;\r\n","import React from 'react';\r\n\r\nconst HelloWorld = ({ children }) => {\r\n    return (\r\n        <div>{children}</div>\r\n    )\r\n}\r\n\r\nexport default HelloWorld;","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport Daytona from './Daytona';\nimport HelloWorld from './HelloWorld';\n\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <HelloWorld>\n        <Switch>\n          <Route path=\"/buildingdreams\" component={Daytona} />\n        </Switch>\n      </HelloWorld>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}